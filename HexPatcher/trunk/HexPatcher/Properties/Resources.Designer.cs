//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.312
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HexPatcher.Properties {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso con establecimiento inflexible de tipos, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o vuelva a generar su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HexPatcher.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso con establecimiento inflexible de tipos.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a .backup.
        /// </summary>
        internal static string AppBackupExtension {
            get {
                return ResourceManager.GetString("AppBackupExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a S.
        /// </summary>
        internal static string AppUppercaseCharYes {
            get {
                return ResourceManager.GetString("AppUppercaseCharYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a 
        ///Error: No se puede crear el archivo de respaldo..
        /// </summary>
        internal static string ErrBackupFailed {
            get {
                return ResourceManager.GetString("ErrBackupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a 
        ///Error: No puede confirmar los cambios en el modo silencioso..
        /// </summary>
        internal static string ErrCantQueryInQuietMode {
            get {
                return ResourceManager.GetString("ErrCantQueryInQuietMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a 
        ///Error: No se puede leer el archivo, no existe o no es accesible..
        /// </summary>
        internal static string ErrCantReadInputFile {
            get {
                return ResourceManager.GetString("ErrCantReadInputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a 
        ///Error: Las secuencias hexadecimales no tienen un formato correcto..
        /// </summary>
        internal static string ErrHexSeqInvalid {
            get {
                return ResourceManager.GetString("ErrHexSeqInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a 
        ///Error: Las secuencias hexadecimales deben tener un largo par..
        /// </summary>
        internal static string ErrHexSeqMustHasEvenLength {
            get {
                return ResourceManager.GetString("ErrHexSeqMustHasEvenLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a 
        ///Error: Argumentos inválidos en la línea de comandos..
        /// </summary>
        internal static string ErrInvalidArgs {
            get {
                return ResourceManager.GetString("ErrInvalidArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a 
        ///Error: No se puede guardar el archivo..
        /// </summary>
        internal static string ErrSaveFailed {
            get {
                return ResourceManager.GetString("ErrSaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a HEXPATCHER origen [reemplazo] [-max n] [-query] [-noBackup] [-quiet]
        ///[-startFrom inicio] [-startWith segmento] [-verbose] [-help] archivo.
        /// </summary>
        internal static string HelpCommandLineParameters {
            get {
                return ResourceManager.GetString("HelpCommandLineParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Realiza reemplazos de segmentos hexadecimales en un archivo binario..
        /// </summary>
        internal static string HelpDescription {
            get {
                return ResourceManager.GetString("HelpDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a   origen		Segmento hexadecimal de origen
        ///  reemplazo		Segmento hexadecimal de reemplazo
        ///  -max n		Define un máximo n de reemplazos
        ///  -query		Solicitar una confirmación por cada reemplazo
        ///  -noBackup		No generar ningún respaldo
        ///  -quiet		No mostrar mensajes ni errores (silencioso)
        ///  -startFrom inicio	Define la coincidencia inicial para los reemplazos
        ///  -startWith segmento	Define un segmento hexadecimal como punto de partida
        ///  -verbose		Mostrar información adicional del proceso
        ///  -help			Muestra esta [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string HelpParametersDetails {
            get {
                return ResourceManager.GetString("HelpParametersDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Los parámetros origen, reemplazo y segmento pueden incluir comodines, así
        ///puede definir cada dos bytes el comodín &quot;??&quot; que coincidirá con cualquier
        ///pareja de bytes en el archivo en donde se realizarán los reemplazos. En el
        ///caso del segmento de reemplazo, un comodín sólo conservará los valores
        ///originales del archivo..
        /// </summary>
        internal static string HelpRemarks {
            get {
                return ResourceManager.GetString("HelpRemarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a No se creó un archivo de respaldo.
        /// </summary>
        internal static string InfoBackupFailed {
            get {
                return ResourceManager.GetString("InfoBackupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Fin del programa.
        /// </summary>
        internal static string InfoFinished {
            get {
                return ResourceManager.GetString("InfoFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Inicialización lista.
        /// </summary>
        internal static string InfoInitializationReady {
            get {
                return ResourceManager.GetString("InfoInitializationReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Segmento encontrado en la posición {0}.
        /// </summary>
        internal static string InfoMatchFound {
            get {
                return ResourceManager.GetString("InfoMatchFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Reemplazo no efectuado en la posición {0}.
        /// </summary>
        internal static string InfoMatchNotReplaced {
            get {
                return ResourceManager.GetString("InfoMatchNotReplaced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Reemplazo efectuado en la posición {0}.
        /// </summary>
        internal static string InfoMatchReplaced {
            get {
                return ResourceManager.GetString("InfoMatchReplaced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a No se produjo ningún cambio en el archivo.
        /// </summary>
        internal static string InfoNoChanges {
            get {
                return ResourceManager.GetString("InfoNoChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a No hay más reemplazos que efectuar.
        /// </summary>
        internal static string InfoNoMoreReplacements {
            get {
                return ResourceManager.GetString("InfoNoMoreReplacements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Preparando el archivo de salida.
        /// </summary>
        internal static string InfoPreparingOutputFile {
            get {
                return ResourceManager.GetString("InfoPreparingOutputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Alcanzado el máximo restringido por el usuario.
        /// </summary>
        internal static string InfoReachedMaxReplacements {
            get {
                return ResourceManager.GetString("InfoReachedMaxReplacements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Inicio de la secuencia de búsqueda.
        /// </summary>
        internal static string InfoSearchingBeginMain {
            get {
                return ResourceManager.GetString("InfoSearchingBeginMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Inicio de búsqueda de segmento inicial.
        /// </summary>
        internal static string InfoSearchingBeginStartup {
            get {
                return ResourceManager.GetString("InfoSearchingBeginStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a No se encontró la secuencia de inicio.
        /// </summary>
        internal static string InfoStartupSeqNotFound {
            get {
                return ResourceManager.GetString("InfoStartupSeqNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a 
        ///Programa terminado.
        ///.
        /// </summary>
        internal static string MsgAppFinished {
            get {
                return ResourceManager.GetString("MsgAppFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Se encontró un segmento para reemplazar en la posición {0}
        /// ¿Desea efectuar el reemplazo? (S/N).
        /// </summary>
        internal static string MsgMatchFoundQuery {
            get {
                return ResourceManager.GetString("MsgMatchFoundQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a 
        ///Ningún cambio realizado.
        ///.
        /// </summary>
        internal static string MsgNoChanges {
            get {
                return ResourceManager.GetString("MsgNoChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a 
        ///{0} cambio(s) realizado(s).
        ///.
        /// </summary>
        internal static string MsgTotalChanges {
            get {
                return ResourceManager.GetString("MsgTotalChanges", resourceCulture);
            }
        }
    }
}
